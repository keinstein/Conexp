<?xml version="1.0" encoding="iso-8859-15"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.2//EN" "http://apache.org/forrest/dtd/document-v12.dtd">
<document> 
  <header> 
    <title>Documentation</title> 
  </header> 
  <body> 
    <p>For downloading ConExp and hint for installation use the menu item Download.
         </p>
    <section>
      <title>Working with Concept Explorer</title>
      <p>The ConExp user interface consists of the following parts:</p>
      <ul>
      <li>The <strong>Menu</strong> which is self-explanatory.</li>
      <li>The <strong>Main toolbar</strong> which contains buttons for global application operation as there are:
          <ul>
          <li>Create a new document;</li>
          <li>Open;</li>
          <li>Save;</li>
          <li>Compute the number of formal concepts;</li>
          <li>Compute the concept lattice;</li>
          <li>Perform the attribute exploration;</li>
          <li>Calculate the Duquenne-Guigues set of implications;</li>
          <li>Calculate association rules;</li>
          </ul>
additionally we have to mention the combo box which allows to select the update mode for the document components that are computed from the formal context (concept lattice, set of implications and association rules). Currently two update modes are supported. Those are <em>re-computation</em> of the affected components or <em>clear</em> them. The latter mode is recommended when changing the context reasonably. After realisation of those changes the appropriate operations can be re-obtained for the new context.
In the case of many changes the other option would cause a re-computation for every single alteration of the context and may lead to computational expenses if the context is big or dense.</li>
      <li>The <strong>main pane</strong> consists of the following items: </li>
          <ul>
          <li><strong>Document-tree</strong>: It displays the structure of the current document and allows to navigate between different views (i.e. context, concept lattice, implications and association rules).</li>
          <li><strong>Option-pane</strong>: It allows to edit different options corresponding to the actual view.</li>
          <li><strong>View-pane</strong>: It contains the display for the current view. There is a toolbar with specific operations for each view.</li>
          </ul>
      <li><strong>Statusbar</strong></li>
      </ul>
      <section>
      <title>Creating a new document</title>
      <p>When starting ConExp a new document is created. Alternatively, one can create a new document by pressing the button <em>New context</em> on main toolbar or selecting the menu item <em>New</em> in <em>Files</em> menu. If a user chooses to open a new document, while working with another that contains unsaved changes, he is asked to save it (or to cancel creating the new document) before creating the new document.</p>
      </section><section><title>Opening existing documents</title>
      <p>ConExp allows to work with several different data formats. Currently the following formats are supported:</p>
      <ul>
      <li>ConExp native format *.cex: This is an XML-based format. It stores information about the context and the lattice line diagram. In addition to the others it stores the information whether implications and/or association rules were calculated. We recommend to use this format.</li>
      <li>ConImp context data *.cxt: It is possible to work with contexts, that were created using <link href="http://www.mathematik.tu-darmstadt.de/~burmeister">ConImp</link>. The disadvantage is, only the context can be encoded in this format.</li>
      <li>Comma Separated Values *.csv: So far ConExp supports only the import of contexts in this format. Actual separator is semicolon (;). It is assumed, that the first line of the file contains attributes names and the first cell is empty. (I.e, if one has a context with attributes attr1 and attr2, then first line will be the following: <em>;attr1;attr2</em>.) Each of the succeeding lines should start with an object name followed by a sequence of 0s and 1s. A cross will appearer in all cells of the imported context, where a 1 has been set.</li>
      <li>Object Attribute List *.oal: So far ConExp supports only the import of contexts in this format. Each line contains information on one object starting with the name and followed-up by the possessed attributes. If object obj1 has the attributes attr2 and attr3, the line representing obj1 should look as follows: <em>obj1:attr2;attr3</em>.</li>
      </ul>
      <p>In addition ConExp allows to reopen documents on which you were working before by selecting one of the items in the sub-menu <em>Files - Reopen</em>.</p>
      </section>

      <section><title>Saving a document</title>
      <p>To save your work, use the menu items <em>Save</em>  and <em>Save as</em>  in the menu <em>Files</em> or select the button <em>Save file</em> on the main toolbar. The recommended storage format is native ConExp format <em>*.cex</em>.</p>
    </section>
    </section>
    <section>
      <title>Working on a context</title>
      <section><title>Undo/redo support</title>
      <p>ConExp provides undo/redo support for all doings that were performed on the context. One can undo the performed actions by selecting the <em>Undo last action</em> button on context editor's toolbar and redo by pressing the <em>Redo last action</em>  button.</p>
      </section>
      <section><title>Changing size of a context</title>
      <p>For changing the size of context one should use the properties window on the left hand side of the main frame and enter new numbers for objects/attributes as properties in <em>object count/ attribute count</em>. Moreover, it is possible to add new objects (attributes) into the context by pressing the corresponding button <em>Add object</em> or <em>Add attribute</em>  on context editor's toolbar.</p>
      <p>In order to remove some set of objects/attributes, select them in context editor and then perform <em>Remove object(s)/Remove attribute(s)</em>  action from context editor's context menu.</p> 
      </section>
      <section><title>Compressed view of a context</title>
      <p>Selecting the <em>Compressed</em> option on the context editor's property pane, gives a better overview on the context, especially when it is large. Then the width of context's columns will be set just to fit the size of the cross and one can have a better look at the structure of context.</p> 
      </section><section><title>Visualization of the arrow relations</title>
      <p>To visualise arrow relations change the property  <em>show arrow relation</em>  from <em>don't show</em> to <em>show arrow relation</em>. As we do not want to introduce any theory here, we refer to the <link href="site:relatedprojects">book by Ganter and Wille</link> for the definition and usage of the arrow relations.</p> 
      </section><section><title>Entering data into the context</title>
      <p><em>Fast editing of contexts</em>: If one needs to input a context of moderate size, one can use the so-called fast context editing.</p>
      <p>For this, just use the keys <em>x</em>  and <em>.</em> . A cross or blanc value will be entered accordingly, when staying in an appropriate cell and the cursor will move to the next cell in relation area.</p>
      <p><em>Transformations on selected areas</em>: After marking an area of cells one can transform the content of the incidence relation between objects and attributes. The following transformations are supported:</p> 
      <ul>
         <li><strong>Fill selection</strong>: This fills the selected area of the incidence relation with crosses.</li>
         <li><strong>Clear selection</strong>: This option clears the content of the selected area.</li>
         <li><strong>Inverse selection</strong>: Here a cross is replaced by a blanc value and vice-versa.</li>
      </ul>
<p>All these transformations can be performed by using the appropriate command from context menu.</p>
      </section>
      <section><title>Operations on contexts</title>
      <p>Following operations can be performed on contexts:</p> 
      <ul>
         <li><strong>Object clarification</strong>: This option brings together all objects in the context having equal sets of attributes. The resulting context shows the first occurrence of those rows only. This operation is executed by the help of the button <em>Clarify objects</em> on the context editor's toolbar.</li>
         <li><strong>Attribute clarification</strong>: This is the analogous operation on the attribute set. It is performed after selecting the <em>Clarify attributes</em> button on context editor toolbar.</li>
         <li><strong>Object set reduction</strong>: Removing all objects from the set of object set that can be obtained as a result of intersection of some other objects is called reduction. In process of performing reduction clarification is also performed. This operation does not change the structure of the concept lattice. Speaking mathematically, the concept lattice of the reduced context is isomorphic to the concept lattice of the original context. This operation is performed by pressing the button <em>Reduce objects</em>  on the context editor's toolbar.</li>
         <li><strong>Attribute set reduction</strong>: This is the analogous operation on the set of attribute. It is performed after selecting the <em>Reduce attributes</em> button on context editor's toolbar.</li>
         <li><strong>Context reduction</strong>: Both operations (reduction of the object and attribute set) can be done simultaneously by executing <em>Reduce context</em>  button on context editor's toolbar.</li>
         <li><strong>Transposition</strong>: Exchanging the role of objects and attribute set together with the corresponding changes of the relation between them, can be performed by selecting the <em>Transpose context</em>  button on context editor's toolbar. </li>
       </ul>
    </section>
    </section>

    <section>
      <title>Concept Lattices and handling the line diagram</title>
      <p> </p>
      <section><title>Building the concept lattice</title>
      <p>In order to derive the concept lattice from the formal context, use the button <em>Build Lattice</em> on the main toolbar. This might be a time consuming process depending on the complexity of the data. The drawing of the lattice appears as a straight line diagram.</p>
      <p>Remark: Lattice-layout tools are time consuming. That is why drawings consisting of only one node can appear. After some time the whole structure will follow.</p> 
      </section>
      <section><title>Interpreting a drawing</title>
      <p>ConExp can represent the structure of a finite formal context in form of a concept lattice. This is not only a graph with nodes and edges connecting them, but an ordered structure with a bottom and a top element. </p>
      <p>Each node of lattice corresponds to a so called <em>formal concept</em>. This is a pair <em>(O, A)</em>, where <em>O</em> is a subset of the object set, <em>A</em> is a subset of the attribute set and some additional properties are satisfied. </p>
      <p>The context contains more information on how objects and attributes should be related. From this we can derive the set containing all attributes common to all objects from the set <em>O</em> and only these attributes. For a formal concept this equal to <em>A</em>. Vice versa <em>O</em> contains all objects from context having all attributes of <em>A</em> among their attributes. The set of objects <em>O</em> is called <em>extent</em> of the formal concept <em>(O, A)</em> and set of attributes <em>A</em> is called <em>intent</em>. For exact definitions we refer again to the <link href="site:relatedprojects">book by Ganter and Wille</link>.</p>
      <p>Hence, the intent of the bottom element contains all attributes of the context and its extent is the set of objects having all attributes. This set can be empty, if no such object has been specified. Vice versa contains the extent of the top element of the lattice all objects. The intent of this contains of all attributes common to all objects. If no such attribute has been defined, then this set is empty.</p>
      <p>For the drawing of the lattice, we use the so called reduced labelling in order to present information about intents and extents of formal context in a concise way. Each node <em>x</em> of the structure represents a formal concept <em>(O,A)</em>. The extent <em>O</em> of this concept can be received collecting all objects attached to nodes reachable by descending paths from this node <em>x</em> to the bottom element of this lattice. </p>
      <p>In the opposite direction works the reading of the intent. The intent <em>A</em> of this concept can be received collecting all attributes attached to nodes reachable by ascending paths from this node <em>x</em> to the top element of this lattice.</p>
      <p>If a node is marked by a blue filled upper semi-circle, then there is an attribute attached to this concept. If a node is marked by a black filled lower semi-circle then there is a object attached to this concept. The label of an attributes is always above the node that it is attached to and  within a mouse-coloured box. The label of an object is always underneath the node it is attached to within a white box.</p>
      <p>Sometimes a node or an edge in a line diagrams is displayed by ConExp in red colour. This means, that the node or edge is placed very close to or even overlapping with some other node. In order to improve the layout, please try manually an adjustment of this layout or use some other layout-tool. </p> 
      </section><section><title>Visualization modes</title>
      <p>Basically, there are two visualization modes, that behave differently, when the drawn lattice does not fit into the existing screen estate. Those are:</p>
      <ul>
          <li><strong>Scrolling mode</strong>: If the drawn lattice does not fit into the screen estate, the virtual window is enlarged. The user then can see only some part of the lattice drawing. This mode is activated by default.</li>
          <li><strong>Fit to screen mode</strong>: Here, the drawn lattice is rescaled in order to fit into the available screen estate.</li>
      </ul>
      <p>Switching between the two modes can be done by the help of the ``Scale picture to fit into the image''  button on the lattice visualization pane toolbar. Selecting this button toggles between first mode and second and vice versa. </p>
      <p>The following commands make sense only in scrolling mode:</p>
      <ul>
          <li><strong>Grab and drag</strong>: This command performs panning of the visible area. After pressing this button, the cursor changes to a cross and user can pan the drawing. To switch off this mode, press <em>Grab and Drag</em>  button once more.</li>
          <li><strong>Zoom in, Zoom out, No zoom</strong>: These commands perform actions, corresponding to their names.</li>
      </ul>
      </section><section><title>Changing visualization options </title>
      <p>The following visualization options can be adjusted via <em>drawing options</em> properties pane on left part of the screen:</p>
      <ul>
          <li><strong>Attribs</strong>: Here the user can change to <em>Show labels</em>, hence the diagram shows attribute's label at corresponding concept. (See also the preceding remark about reduced labelling.)</li>
          <li><strong>Objects</strong>: This is the lower label visualization mode. Here the user is given more possibilities to choose from:
          <ul>
              <li><strong>Don't show</strong> - no object labels are shown;</li>
              <li><strong>Show labels</strong> - shows object labels below the corresponding concepts;</li>
              <li><strong>Show own objects</strong> - for concepts, that have some objects attached (has non empty object <em>contingent</em>) show number and percentage of objects, that belong exactly (i.e., their attribute set is equal to intent) to this concept;</li>
              <li><strong>Show object count</strong> - this shows for every node the exact number (percentage) of objects belonging to the extent of the node's concept;</li>
              <li><strong>Stability</strong> - this shows for every node the minimal number of objects that should be removed from context to wipe out the node from concept lattice.</li>
          </ul></li>
          <li><strong>Draw node</strong> - this option specifies how the radius of a node is calculated. The possibilities are:
          <ul>
              <li><strong>to own objects</strong> - the radius of a node is calculated proportionally to the size of the contingent (the number of objects matching exactly the intent of this node),</li>
              <li><strong>fixed radius</strong> - all nodes have a equal radius. The actual node radius is determined by option <em>Node radius</em>,</li>
              <li><strong>of object extent</strong> - the node radius is calculated proportionally to size of its extent,</li>
              <li><strong>stability</strong> - the node radius is calculated proportionally to its stability to dissolve (see description of stability above).</li>
          </ul></li>
          <li><strong>Draw edge</strong> - specifies how an edge is drawn. The possible values are:
          <ul>
              <li><strong>one pixel</strong> - the edge width is fixed,</li>
              <li><strong>no</strong> - edges are not drawn at all,</li>
              <li><strong>object</strong> - proportionally to the number of objects, that <em>pass</em>  through this edge. Equivalent to the option for drawing nodes <em>of object extent</em>,</li>
              <li><strong>connection</strong> - the size of an edge is proportional to the ratio between extent size of the lower and upper concept that are connected by this edge. This value is equal to confidence of the approximate association rule corresponding to this edge.</li>
          </ul></li>
          <li><strong>Highlight</strong> - specifies, which nodes are highlighted, except for selected edges. These options were created in order to make the exploration of the lattice easier. Possible values of this option are:
          <ul>
              <li><strong>Filter and ideal</strong> - nodes of the filter (all nodes that are reachable by ascending paths from the selected node to top of the lattice) and the ideal (all nodes that can be reached by descending paths from the selected node to the bottom of the lattices) are highlighted,</li>
              <li><strong>Selected</strong> - only the selected node is highlighted,</li>
              <li><strong>Neighbors</strong> - the selected node and it's upper and lower neighbors are highlighted,</li>
              <li><strong>Ideal</strong> - nodes of the ideal are highlighted,</li>
              <li><strong>Filter</strong> - nodes of the filter are highlighted,</li>
              <li><strong>No</strong> - no nodes are highlighted. This option may be useful before saving the drawing of the lattice.</li>
          </ul></li>
          <li><strong>Label font size</strong> - specifies the size of the font that is used for the upper and lower labels.</li>
          <li><strong>Grid size x</strong> - specifies the preferred distance between different nodes on one level of drawing by means of the x coordinate. It is used as a parameter for the lattice layout and changing this value leads to a rescaling of the coordinates of all nodes.</li>
          <li><strong>Grid size y</strong> - specifies the preferred distance between nodes on adjacent levels of drawing by means of the y coordinate. Again, it is used as a parameter for the lattice layout and changing this value leads to a rescaling of the coordinates of all nodes.</li>
          <li><strong>Node radius</strong> - this parameter specifies the largest radius used for drawing a concept node.</li>
          </ul>
      </section>
      <section><title>Changing the layout of a lattice</title>
      <p>If the initial drawing of the lattice is not very satisfactorily, then it is recommended to use several different layout algorithms in order to get a first impression and an approximation before starting the manual adjustment of the drawing.</p>
      <p><em>Warning</em>: Performing another layout algorithm destroys the previous drawing. If you do not want to loose work already done, make sure you saved the drawing before you select another algorithm.</p>
      <p>The algorithms implemented in ConExp have various options, that can be access through the <em>Layout options</em> tab in the properties panel. The following layout algorithms are provided:</p>
      <ul>
      <li><strong>Minimal intersections</strong> - this is adapted to lattices version of algorithm for laying out hierarchical graphs. It tries to minimize number of intersections between edges. It has no parameters. Usually this algorithm provides best results, but it is pretty slow for the big lattices.</li>
      <li><strong>Chain decomposition</strong> - it is an adapted version of the algorithm of by M.~Skorsky. The outcome are so called <em>additive lines diagrams</em>. It is recommended to use ideal node movement strategy when working with such line diagrams. This algorithm produces very good results for distributive lattices. Here the user can adjust the following options:</li>
          <ul>
          <li><strong>Representation</strong> - changes the kind of representation used for formal concepts when calculating its coordinates. The possibilities are attribute-based or object-based calculation.</li>
          <li><strong>Placement</strong> - determines the assignment of values to the set of vectors. One can choose from three values - <em>exponential, straight}</em> or <em>angular</em>.</li>
          <li><strong>Rotate left, Rotate right</strong> - performs a permutation on the set of vectors - it is used to select the best, if there are several possibilities.</li>
          </ul>
      </ul>
      <p>The following two algorithms belong to a family of so-called <em>force-directed</em>  layout algorithms. They are:</p>
      <ul>
      <li><strong>Freese layout</strong> - It is an adaptation of the algorithm of Ralph Freese for drawing lattices. It can be found on the <link href="http://www.math.hawaii.edu/~ralph/LatDraw">home page of R. Freese</link>. This algorithm has the following parameters:</li>
          <ul>
          <li><strong>Attraction</strong> - regulates the attraction force between nodes;</li>
          <li><strong>Repulsion</strong> - regulates the repulsion force between nodes;</li>
          <li><strong>Angle</strong> - this is not a parameter of the algorithm, but it has a vast influences on the outcome. Freese algorithm performs the layout in 3D space. The angle controls the projection from 3D space into the 2D surface of screen.</li>
          </ul>
      <li><strong>Force layout</strong> - This force directed algorithm differs in the way the forces are calculated from previous one. The parameters of this algorithm are analogous to the parameters of the previous one.</li> 
      </ul>
      </section><section><title>Manually adjustment of a drawing</title>
      <p>Unfortunately for now there is no layout algorithm producing good results for all lattices. Therefore, the best way to produce good drawing is to perform the manual adjustment of the lattice, when all algorithms failed.</p>
      <p>Movements of lattice nodes are constrained in ConExp as far as they maintain a correct parent-child (successor-predecessor) relations between nodes.</p>
      <p>The following tools exists in ConExp in order to support manual adjustment of a lattice:</p>
      <ul>
      <li><strong>Ideal node movement mode</strong> - when moving a node, the whole ideal of the node is moved as well. The switch between this mode and one node movement strategy is performed by pressing the <em>Toggle node move mode</em> button.</li>
      <li><strong>Align nodes to grid</strong> - performs an alignment of the node coordinates to the invisible grid of size 8 on 8 pixels.</li> 
      <li><strong>Storing images of drawing</strong> One of the most frequent uses of ConExp is to produce images of lattice drawings for some future usage. This task can be achieved by creating a good drawing of the lattice and pressing the <em>Save lattice image</em> button on lattice visualization pane toolbar afterwards. Currently the formats <em>png</em> and <em>jpeg</em> are supported for saving images.</li>
      </ul>
      </section>
      <section><title>Building lattices of subcontexts</title>
      <p>ConExp also provides the ability to build lattices corresponding to a subcontext of the original context. This task can be achieved by using the attribute selection and object selection pane on the right hand side of lattice drawing pane. </p>
      <p>After selecting or deselecting names of objects or attributes the new lattice corresponding to the selected subcontext is build. To include all objects (attributes) into this selection use the <em>Select all objects</em> (<em>Select all attributes</em>) buttons at the bottom of corresponding panes.</p>
      <p><em>Warning</em>: Building lattice of subcontexts leads to a destruction of all information about previous drawing. Please store the image that you obtained if the outcome is useful or you had some work with it. </p>
    </section>
    </section>
    <section>
      <title>Working with implication bases</title>
      <p>
         </p>
      <section><title>Calculating the Duquenne-Guigues-Basis</title>
      <p>The ideas of the following section can be seen as a third approach to the data. Beside the formal context and the lattice diagram one can examine the implications between attributes valid in a context. Again, we ask the user to look up the theory in the recommended literature.</p>

      <p>From the Duquenne-Guigues-Basis for implications one can derive all implications valid in a formal context using the Armstrong rules. For calculating this base, one should press the button <em>Calculate Duquenne-Guigues set of implications</em> on the main toolbar. The main advantage of Duquenne-Guigues set of implications is that it has minimal size among all possible sets of implications generating all implications that hold in this context.</p>

      <p>Implications appearing in the <em>Implication sets</em>  pane have the following format:</p>
      <p><em>No -Number of objects- Premise -- Conclusion,</em></p>
      <p>where <em>No</em> simply means the number of implication in list. <em>Number of objects</em> shows, for how many objects this implication holds. <em>Premise</em> and <em>conclusion</em> are usually lists of attribute names occurring in the premise (conclusion). Even the empty set can be a premise. That means, this implication has the empty premise and therefore the conclusion holds for all objects from context.</p>

      <p>Implications are displayed by ConExp  in one of the two colours: blue or red. The blue colours indicates that there are objects in context which support this rule. Contrarily, the red colour indicates that there are no objects supporting this implication. Usually such implications show that within the set of objects no element appears having all attributes of the premise. And indeed, such implications include all attributes from context among premise and conclusion. </p>
      </section>
      <section><title>Searching for associations</title>
      <p>In contrast to implications, we allow non-strict rules for association rules. If the premise of an association rule holds, the conclusion does not necessarily hold for all objects. However, it is true for some stated percentage of all objects covering the premise of rule. The base of association rules consists of two parts. Of course it includes the base of strict rules (Duquenne-Guigues-Basis) and additionally the base of approximate rules (so called Luxenburger base).</p>

      <p>ConExp allows to calculate this base of association rules. To do so, select the button <em>Calculate association rules</em>  on the main toolbar.</p>

      <p>The display format of association rules modifies slightly the format for implications. It is:</p>
      <p><em>No -Number of objects, for which premise holds- Premise =[Rule confidence] -- -Number of objects, for which premise and conclusion holds- Conclusion </em></p>

      <p>In addition to red and blue, as they are used for implications, green indicates the approximate rules. </p>
      </section>
      <section><title>Performing an attribute exploration</title>
      <p>When calculating the implications for some context, it might turn out that those hold for objects from this context only but not in general for all object from a certain domain of interest. In order to overcome this insufficiency, we suggest to start an <em>attribute exploration</em> procedure.</p>
 
      <p>Attribute exploration is an interactive procedure. The program provides implications, that are valid in the given context. These can be seen as question about dependencies between different attributes from some fixed set of attributes. The expert confirms, that such a dependency generally holds by answering <em>yes</em>. He rejects this dependency providing a counterexample. If an expert answers correctly on all questions, than at the end of this procedure he receives the set of all implications describing dependencies between different attributes in the domain of interest.</p>
 
      <p>The attribute exploration procedure can either start from an empty context, where only attributes are specified or from a context, where some objects already are described.</p>

      <p>To start this procedure, select the button <em>Start attribute exploration</em> on the main toolbar.</p>

      <p>Then the first implication appears and the user either confirms or rejects it. A third possibility is to stop the attribute exploration procedure. If a user has to reject an implication, a dialogue pane appears and he is asked to provide a counterexample.</p>
    </section>
   </section>
  </body>
</document>
